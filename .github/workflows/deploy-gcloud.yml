name: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1 # e.g., us-central1
  SERVICE_NAME_WEB: 'creator-cmd-center-web'
  SERVICE_NAME_WORKER: 'creator-cmd-center-worker'
  REGION: us-central1 # e.g., us-central1

jobs:
  build-and-push:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME_WEB }}/image:${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: |-
          docker build \
            --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME_WEB }}/image:$GITHUB_SHA" \
            .

      - name: Push Docker image to Artifact Registry
        run: |-
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME_WEB }}/image:$GITHUB_SHA"

  run-migrations:
    name: 'Run Database Migrations'
    runs-on: ubuntu-latest
    needs: build-and-push # Run after the image is built

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy Cloud Run Job for migrations
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME_WEB }}-migrations
          job: true # Specifies this is a Cloud Run Job
          image: ${{ needs.build-and-push.outputs.image_tag }}
          region: ${{ env.REGION }}
          container_command: "alembic"
          container_args: "upgrade,head"
          secrets: "DATABASE_URL:LATEST"

  deploy-services:
    name: 'Deploy Web and Worker Services'
    runs-on: ubuntu-latest
    needs: run-migrations # Run after migrations are complete

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy Web Service
        id: deploy-web
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME_WEB }}
          region: ${{ env.REGION }}
          image: ${{ needs.build-and-push.outputs.image_tag }}
          # Secrets from Secret Manager will be mounted as environment variables
          secrets: |-
            DATABASE_URL:LATEST
            REDIS_URL:LATEST
            SECRET_KEY:LATEST
            GOOGLE_CLIENT_ID:LATEST
            GOOGLE_CLIENT_SECRET:LATEST

      - name: Deploy Worker Service
        id: deploy-worker
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME_WORKER }}
          region: ${{ env.REGION }}
          image: ${{ needs.build-and-push.outputs.image_tag }}
          # The worker doesn't expose a port and runs the celery command
          no_traffic: true
          container_command: "celery"
          container_args: "-A,app.backend.tasks.celery_app,worker,--loglevel=info"
          secrets: |-
            DATABASE_URL:LATEST
            REDIS_URL:LATEST
            SECRET_KEY:LATEST

      - name: Show Deployed URLs
        run: |-
          echo "Web service deployed to: ${{ steps.deploy-web.outputs.url }}"
          echo "Worker service deployed."