name: Deploy to Test Environment

on:
  push:
    branches:
      - develop

permissions:
  contents: 'read'
  id-token: 'write'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE_NAME: 'creator-cmd-center-test'
  REGION: us-central1

jobs:
  build-and-push:
    uses: ./.github/workflows/reusable-build.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
    secrets: inherit

  deploy-test-app:
    name: Build and Deploy Test App
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set Artifact Registry Cleanup Policy
        run: |
          gcloud artifacts repositories set-cleanup-policies ${{ env.SERVICE_NAME }} \
            --project=${{ env.PROJECT_ID }} \
            --location=${{ env.GAR_LOCATION }} \
            --policy='{
                "name": "delete-untagged-after-15-days", # Note: name is for identification, content matters
                "action": {"type": "Delete"},
                "condition": {
                  "olderThan": "1296000s",
                  "tagState": "UNTAGGED"
                }
              }'
      - name: Deploy All-in-One Service to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          min_instances: 0 # Scale to zero to save costs
          image: ${{ needs.build-and-push.outputs.image_tag }}
          env_vars: "ENV=test"
          secrets: |-
            SECRET_KEY:LATEST
            GOOGLE_CLIENT_ID:LATEST
            GOOGLE_CLIENT_SECRET:LATEST

      - name: Clean up old revisions
        if: success()
        run: |
          echo "--- Cleaning up old revisions for ${{ env.SERVICE_NAME }} ---"
          gcloud run revisions list --service=${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --sort-by=~creationTimestamp --format='get(metadata.name)' | tail -n +4 | xargs -r gcloud run revisions delete --region=${{ env.REGION }} --quiet