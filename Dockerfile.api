# Dockerfile.api
# Stage 1: Build Frontend
FROM node:18-alpine as frontend-builder
WORKDIR /app/frontend/dev_dashboard

COPY frontend/dev_dashboard/package.json ./
COPY frontend/dev_dashboard/yarn.lock ./
RUN yarn install --frozen-lockfile

COPY frontend/dev_dashboard/ ./
RUN yarn build # The ARG VITE_API_BASE_URL is not used by react-scripts

# Stage 2: Install Python Dependencies
FROM python:3.11-slim as backend-builder
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

COPY app/requirements.txt app/requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r app/requirements.txt

# Final Stage: Production Image for API
FROM python:3.11-slim
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install -y --no-install-recommends curl && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN pip install --no-cache-dir gunicorn 'uvicorn[standard]'

COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY app/backend /app/app/backend
COPY app/full_pipeline.py /app/app/full_pipeline.py
COPY app/services /app/app/services

# Copy the built frontend assets to a static directory.
# Note: Your API backend (app/backend/main.py) must be configured to serve these files.
COPY --from=frontend-builder /app/frontend/dev_dashboard/build ./app/static

# Database initialization
CMD ["gunicorn", "app.backend.main:app", "--bind", "0.0.0.0:8000", "--workers", "3", "--worker-class", "uvicorn.workers.UvicornWorker", "--log-level", "info"]