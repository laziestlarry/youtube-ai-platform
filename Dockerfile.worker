# Dockerfile.worker
# Stage 1: Install Python Dependencies
FROM python:3.11-slim as backend-builder
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

COPY app/requirements.txt app/requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r app/requirements.txt

# Final Stage: Production Image for Worker
FROM python:3.11-slim
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install -y --no-install-recommends ffmpeg curl && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN pip install --no-cache-dir gunicorn 'uvicorn[standard]'

COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY app/backend /app/app/backend
COPY app/full_pipeline.py /app/app/full_pipeline.py
COPY app/services /app/app/services

# Database initialization (worker also needs DB access)
COPY app/backend/core/database.py /app/app/backend/core/database.py
RUN python -c "import asyncio; from app.backend.core.database import init_db; asyncio.run(init_db()); print('Database initialization complete.')"

# Copy the new worker_main.py
COPY app/backend/worker_main.py /app/app/backend/worker_main.py

CMD ["gunicorn", "app.backend.worker_main:app", "--bind", "0.0.0.0:8000", "--workers", "1", "--worker-class", "uvicorn.workers.UvicornWorker", "--log-level", "info"]